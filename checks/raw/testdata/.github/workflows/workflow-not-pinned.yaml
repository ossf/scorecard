# Copyright 2021 OpenSSF Scorecard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
on:
  push:
    paths:
    - 'source/common/**'
  pull_request:

jobs:
  CodeQL-Build:

    strategy:
      fail-fast: false

    # CodeQL runs on ubuntu-latest and windows-latest
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@daadedc81d5f9d3c06d2c92f49202a3cc2b919ba
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Dockerhub actionlint # (just to test docker://) urls for the uses parameter, not needed for the workflow
      uses: docker://rhysd/actionlint@latest
      with:
        args: -color
    - name: Get build targets
      run: |
       . .github/workflows/get_build_targets.sh
       echo 'BUILD_TARGETS<<EOF' >> $GITHUB_ENV
       echo $BUILD_TARGETS_LOCAL >> $GITHUB_ENV
       echo 'EOF' >> $GITHUB_ENV
    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@daadedc81d5f9d3c06d2c92f49202a3cc2b919ba
      # Override language selection by uncommenting this and choosing your languages
      with:
         languages: cpp

    - name: Install deps
      shell: bash
      run: |
       sudo apt-get update && sudo apt-get install libtool cmake automake autoconf make ninja-build curl unzip virtualenv openjdk-11-jdk build-essential libc++1
       mkdir -p bin/clang11
       cd bin/clang11
       wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/clang+llvm-11.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz
       tar -xf clang+llvm-11.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz --strip-components 1
       export PATH=bin/clang11/bin:$PATH
    - name: Build
      run: |
       bazel/setup_clang.sh bin/clang11
       bazelisk shutdown
       bazelisk build -c fastbuild --spawn_strategy=local --discard_analysis_cache --nouse_action_cache --config clang --config libc++ $BUILD_TARGETS
       echo -e "Built targets...\n$BUILD_TARGETS"
    - name: Clean Artifacts
      run: |
        git clean -xdf
    - name: Perform CodeQL Analysis
      if: env.BUILD_TARGETS != ''
      uses: github/codeql-action/analyze@v1