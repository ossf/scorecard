// Copyright 2021 Security Scorecard Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: clients/branch.proto

package clients

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BranchRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Protected            bool                  `protobuf:"varint,2,opt,name=protected,proto3" json:"protected,omitempty"`
	BranchProtectionRule *BranchProtectionRule `protobuf:"bytes,3,opt,name=branch_protection_rule,json=branchProtectionRule,proto3" json:"branch_protection_rule,omitempty"`
}

func (x *BranchRef) Reset() {
	*x = BranchRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_branch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BranchRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchRef) ProtoMessage() {}

func (x *BranchRef) ProtoReflect() protoreflect.Message {
	mi := &file_clients_branch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchRef.ProtoReflect.Descriptor instead.
func (*BranchRef) Descriptor() ([]byte, []int) {
	return file_clients_branch_proto_rawDescGZIP(), []int{0}
}

func (x *BranchRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BranchRef) GetProtected() bool {
	if x != nil {
		return x.Protected
	}
	return false
}

func (x *BranchRef) GetBranchProtectionRule() *BranchProtectionRule {
	if x != nil {
		return x.BranchProtectionRule
	}
	return nil
}

type BranchProtectionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowDeletions             *AllowDeletions        `protobuf:"bytes,1,opt,name=allow_deletions,json=allowDeletions,proto3" json:"allow_deletions,omitempty"`
	AllowForcePushes           *AllowForcePushes      `protobuf:"bytes,2,opt,name=allow_force_pushes,json=allowForcePushes,proto3" json:"allow_force_pushes,omitempty"`
	RequireLinearHistory       *RequireLinearHistory  `protobuf:"bytes,3,opt,name=require_linear_history,json=requireLinearHistory,proto3" json:"require_linear_history,omitempty"`
	EnforceAdmins              *EnforceAdmins         `protobuf:"bytes,4,opt,name=enforce_admins,json=enforceAdmins,proto3" json:"enforce_admins,omitempty"`
	RequiredStatusChecks       *StatusChecksRule      `protobuf:"bytes,5,opt,name=required_status_checks,json=requiredStatusChecks,proto3" json:"required_status_checks,omitempty"`
	RequiredPullRequestReviews *PullRequestReviewRule `protobuf:"bytes,6,opt,name=required_pull_request_reviews,json=requiredPullRequestReviews,proto3" json:"required_pull_request_reviews,omitempty"`
}

func (x *BranchProtectionRule) Reset() {
	*x = BranchProtectionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_branch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BranchProtectionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchProtectionRule) ProtoMessage() {}

func (x *BranchProtectionRule) ProtoReflect() protoreflect.Message {
	mi := &file_clients_branch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchProtectionRule.ProtoReflect.Descriptor instead.
func (*BranchProtectionRule) Descriptor() ([]byte, []int) {
	return file_clients_branch_proto_rawDescGZIP(), []int{1}
}

func (x *BranchProtectionRule) GetAllowDeletions() *AllowDeletions {
	if x != nil {
		return x.AllowDeletions
	}
	return nil
}

func (x *BranchProtectionRule) GetAllowForcePushes() *AllowForcePushes {
	if x != nil {
		return x.AllowForcePushes
	}
	return nil
}

func (x *BranchProtectionRule) GetRequireLinearHistory() *RequireLinearHistory {
	if x != nil {
		return x.RequireLinearHistory
	}
	return nil
}

func (x *BranchProtectionRule) GetEnforceAdmins() *EnforceAdmins {
	if x != nil {
		return x.EnforceAdmins
	}
	return nil
}

func (x *BranchProtectionRule) GetRequiredStatusChecks() *StatusChecksRule {
	if x != nil {
		return x.RequiredStatusChecks
	}
	return nil
}

func (x *BranchProtectionRule) GetRequiredPullRequestReviews() *PullRequestReviewRule {
	if x != nil {
		return x.RequiredPullRequestReviews
	}
	return nil
}

type AllowDeletions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AllowDeletions) Reset() {
	*x = AllowDeletions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_branch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowDeletions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowDeletions) ProtoMessage() {}

func (x *AllowDeletions) ProtoReflect() protoreflect.Message {
	mi := &file_clients_branch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowDeletions.ProtoReflect.Descriptor instead.
func (*AllowDeletions) Descriptor() ([]byte, []int) {
	return file_clients_branch_proto_rawDescGZIP(), []int{2}
}

func (x *AllowDeletions) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type AllowForcePushes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AllowForcePushes) Reset() {
	*x = AllowForcePushes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_branch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowForcePushes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowForcePushes) ProtoMessage() {}

func (x *AllowForcePushes) ProtoReflect() protoreflect.Message {
	mi := &file_clients_branch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowForcePushes.ProtoReflect.Descriptor instead.
func (*AllowForcePushes) Descriptor() ([]byte, []int) {
	return file_clients_branch_proto_rawDescGZIP(), []int{3}
}

func (x *AllowForcePushes) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type RequireLinearHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *RequireLinearHistory) Reset() {
	*x = RequireLinearHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_branch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequireLinearHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequireLinearHistory) ProtoMessage() {}

func (x *RequireLinearHistory) ProtoReflect() protoreflect.Message {
	mi := &file_clients_branch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequireLinearHistory.ProtoReflect.Descriptor instead.
func (*RequireLinearHistory) Descriptor() ([]byte, []int) {
	return file_clients_branch_proto_rawDescGZIP(), []int{4}
}

func (x *RequireLinearHistory) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type EnforceAdmins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *EnforceAdmins) Reset() {
	*x = EnforceAdmins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_branch_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnforceAdmins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnforceAdmins) ProtoMessage() {}

func (x *EnforceAdmins) ProtoReflect() protoreflect.Message {
	mi := &file_clients_branch_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnforceAdmins.ProtoReflect.Descriptor instead.
func (*EnforceAdmins) Descriptor() ([]byte, []int) {
	return file_clients_branch_proto_rawDescGZIP(), []int{5}
}

func (x *EnforceAdmins) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type StatusChecksRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strict   bool     `protobuf:"varint,1,opt,name=strict,proto3" json:"strict,omitempty"`
	Contexts []string `protobuf:"bytes,2,rep,name=contexts,proto3" json:"contexts,omitempty"`
}

func (x *StatusChecksRule) Reset() {
	*x = StatusChecksRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_branch_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusChecksRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusChecksRule) ProtoMessage() {}

func (x *StatusChecksRule) ProtoReflect() protoreflect.Message {
	mi := &file_clients_branch_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusChecksRule.ProtoReflect.Descriptor instead.
func (*StatusChecksRule) Descriptor() ([]byte, []int) {
	return file_clients_branch_proto_rawDescGZIP(), []int{6}
}

func (x *StatusChecksRule) GetStrict() bool {
	if x != nil {
		return x.Strict
	}
	return false
}

func (x *StatusChecksRule) GetContexts() []string {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type PullRequestReviewRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequiredApprovingReviewCount int32 `protobuf:"varint,1,opt,name=required_approving_review_count,json=requiredApprovingReviewCount,proto3" json:"required_approving_review_count,omitempty"`
	DismissStaleReviews          bool  `protobuf:"varint,2,opt,name=dismiss_stale_reviews,json=dismissStaleReviews,proto3" json:"dismiss_stale_reviews,omitempty"`
	RequireCodeOwnerReviews      bool  `protobuf:"varint,3,opt,name=require_code_owner_reviews,json=requireCodeOwnerReviews,proto3" json:"require_code_owner_reviews,omitempty"`
}

func (x *PullRequestReviewRule) Reset() {
	*x = PullRequestReviewRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clients_branch_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullRequestReviewRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequestReviewRule) ProtoMessage() {}

func (x *PullRequestReviewRule) ProtoReflect() protoreflect.Message {
	mi := &file_clients_branch_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequestReviewRule.ProtoReflect.Descriptor instead.
func (*PullRequestReviewRule) Descriptor() ([]byte, []int) {
	return file_clients_branch_proto_rawDescGZIP(), []int{7}
}

func (x *PullRequestReviewRule) GetRequiredApprovingReviewCount() int32 {
	if x != nil {
		return x.RequiredApprovingReviewCount
	}
	return 0
}

func (x *PullRequestReviewRule) GetDismissStaleReviews() bool {
	if x != nil {
		return x.DismissStaleReviews
	}
	return false
}

func (x *PullRequestReviewRule) GetRequireCodeOwnerReviews() bool {
	if x != nil {
		return x.RequireCodeOwnerReviews
	}
	return false
}

var File_clients_branch_proto protoreflect.FileDescriptor

var file_clients_branch_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6f, 0x73, 0x73, 0x66, 0x2e, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa1,
	0x01, 0x0a, 0x09, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x62,
	0x0a, 0x16, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6f, 0x73, 0x73, 0x66, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x14, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x22, 0xc3, 0x04, 0x0a, 0x14, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x73, 0x73, 0x66, 0x2e, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x12,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x73, 0x73, 0x66, 0x2e,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x65, 0x73, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x73, 0x73, 0x66, 0x2e, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x61,
	0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x0e, 0x65, 0x6e, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6f, 0x73, 0x73, 0x66, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72,
	0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x0d, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x5e, 0x0a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x73, 0x73, 0x66, 0x2e, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x70, 0x0a, 0x1d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6f, 0x73, 0x73, 0x66, 0x2e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x1a, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x2c, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x50, 0x75, 0x73, 0x68, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x61, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22,
	0x46, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x15, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x45, 0x0a, 0x1f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1c, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x3b, 0x0a, 0x1a,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x73, 0x73, 0x66, 0x2f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clients_branch_proto_rawDescOnce sync.Once
	file_clients_branch_proto_rawDescData = file_clients_branch_proto_rawDesc
)

func file_clients_branch_proto_rawDescGZIP() []byte {
	file_clients_branch_proto_rawDescOnce.Do(func() {
		file_clients_branch_proto_rawDescData = protoimpl.X.CompressGZIP(file_clients_branch_proto_rawDescData)
	})
	return file_clients_branch_proto_rawDescData
}

var file_clients_branch_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_clients_branch_proto_goTypes = []interface{}{
	(*BranchRef)(nil),             // 0: ossf.scorecard.clients.BranchRef
	(*BranchProtectionRule)(nil),  // 1: ossf.scorecard.clients.BranchProtectionRule
	(*AllowDeletions)(nil),        // 2: ossf.scorecard.clients.AllowDeletions
	(*AllowForcePushes)(nil),      // 3: ossf.scorecard.clients.AllowForcePushes
	(*RequireLinearHistory)(nil),  // 4: ossf.scorecard.clients.RequireLinearHistory
	(*EnforceAdmins)(nil),         // 5: ossf.scorecard.clients.EnforceAdmins
	(*StatusChecksRule)(nil),      // 6: ossf.scorecard.clients.StatusChecksRule
	(*PullRequestReviewRule)(nil), // 7: ossf.scorecard.clients.PullRequestReviewRule
}
var file_clients_branch_proto_depIdxs = []int32{
	1, // 0: ossf.scorecard.clients.BranchRef.branch_protection_rule:type_name -> ossf.scorecard.clients.BranchProtectionRule
	2, // 1: ossf.scorecard.clients.BranchProtectionRule.allow_deletions:type_name -> ossf.scorecard.clients.AllowDeletions
	3, // 2: ossf.scorecard.clients.BranchProtectionRule.allow_force_pushes:type_name -> ossf.scorecard.clients.AllowForcePushes
	4, // 3: ossf.scorecard.clients.BranchProtectionRule.require_linear_history:type_name -> ossf.scorecard.clients.RequireLinearHistory
	5, // 4: ossf.scorecard.clients.BranchProtectionRule.enforce_admins:type_name -> ossf.scorecard.clients.EnforceAdmins
	6, // 5: ossf.scorecard.clients.BranchProtectionRule.required_status_checks:type_name -> ossf.scorecard.clients.StatusChecksRule
	7, // 6: ossf.scorecard.clients.BranchProtectionRule.required_pull_request_reviews:type_name -> ossf.scorecard.clients.PullRequestReviewRule
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_clients_branch_proto_init() }
func file_clients_branch_proto_init() {
	if File_clients_branch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clients_branch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BranchRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_branch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BranchProtectionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_branch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowDeletions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_branch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowForcePushes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_branch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequireLinearHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_branch_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnforceAdmins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_branch_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusChecksRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clients_branch_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullRequestReviewRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clients_branch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_clients_branch_proto_goTypes,
		DependencyIndexes: file_clients_branch_proto_depIdxs,
		MessageInfos:      file_clients_branch_proto_msgTypes,
	}.Build()
	File_clients_branch_proto = out.File
	file_clients_branch_proto_rawDesc = nil
	file_clients_branch_proto_goTypes = nil
	file_clients_branch_proto_depIdxs = nil
}
