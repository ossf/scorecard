# Copyright 2021 Security Scorecard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run secret-dependent integration tests only after approval
name: Integration tests
on: pull_request_target

permissions:
  contents: read
  pull-requests: write

jobs:
  approve:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # v1
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: approve
        run: echo For security reasons, all pull requests need to be approved before running integration tests.

  integration-trusted:
    runs-on: ubuntu-latest
    environment: integration-test
    needs: [approve]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34 # v1
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: pull_request actions/checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: setup-go
        uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # v2.2.0
        with:
          go-version: '1.19'
          check-latest: true

      - name: Prepare test env
        run: |
            go mod download

      - name: Run GITHUB_TOKEN E2E  #using retry because the GitHub token is being throttled.
        uses: nick-invision/retry@3e91a01664abd3c5cd539100d10d33b9c5b68482
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 30
          command: make e2e-gh-token

      - name: Run PAT E2E  #using retry because the GitHub token is being throttled.
        uses: nick-invision/retry@3e91a01664abd3c5cd539100d10d33b9c5b68482
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 30
          command: make e2e-pat
      
      - name: Run attestor e2e  #using retry because the GitHub token is being throttled.
        uses: nick-invision/retry@3e91a01664abd3c5cd539100d10d33b9c5b68482
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 10
          command: make e2e-attestor

      - name: codecov
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378 # 2.1.0
        with:
         fail_ci_if_error: true
         files: ./e2e-coverage.out,./attestor/e2e/e2e-coverage.out
         verbose: true

      - name: find comment
        uses: peter-evans/find-comment@b657a70ff16d17651703a84bee1cb9ad9d2be2ea # v2.0.1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number || github.event.client_payload.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Integration tests ran for

      - name: create or update comment
        uses: peter-evans/create-or-update-comment@5adcb0bb0f9fb3f95ef05400558bdb3f329ee808 # v1.4.5
        with:
          issue-number: ${{ github.event.pull_request.number || github.event.client_payload.pull_request.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            Integration tests ${{ job.status }} for
            [${{ github.event.client_payload.slash_command.args.named.sha || github.event.pull_request.head.sha }}]
            (https://github.com/ossf/scorecard/actions/runs/${{ github.run_id }})
