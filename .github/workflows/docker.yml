# Copyright 2021 OpenSSF Scorecard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

permissions:
  contents: read

name: docker-build

on:
 pull_request:
  branches:
  - main

env:
  PROTOC_VERSION: 3.17.3
  GO_VERSION: 1.19

jobs:
  docs_only_check:
    name: Check for docs-only change
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      docs_only: ${{ steps.docs_only_check.outputs.docs_only }}
    steps:
    - name: Check out code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2
      with:
        fetch-depth: 2
    - id: files
      name: Get changed files
      uses: tj-actions/changed-files@7ecfc6730dff8072d1cc5215a24cc9478f55264d #v35.8.0
      with:
        files_ignore: '**.md'
    - id: docs_only_check
      if: steps.files.outputs.any_changed != 'true'
      name: Check for docs-only changes
      run: echo "docs_only=true" >> $GITHUB_OUTPUT

  scorecard:
    name: scorecard-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v1
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@64c0c85d18e984422218383b81c52f8b077404d3 # v1.1.2
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Cache builds
       # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
       uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 #v3.3.1
       with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
         path: |
           ~/go/pkg/mod
           ~/.cache/go-build
           ~/Library/Caches/go-build
           %LocalAppData%\go-build
         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
         restore-keys: |
           ${{ runner.os }}-go-
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.3.4
       with:
          fetch-depth: 0
     - name: Setup Go
       uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v2.2.0
       with:
         go-version: ${{ env.GO_VERSION }}
         check-latest: true
         cache: true
     - name: docker build
       run: make scorecard-docker
  cron-controller:
    name: cron-controller-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v1
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@64c0c85d18e984422218383b81c52f8b077404d3 # v1.1.2
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Cache builds
       # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
       uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 #v3.3.1
       with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
         path: |
           ~/go/pkg/mod
           ~/.cache/go-build
           ~/Library/Caches/go-build
           %LocalAppData%\go-build
         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
         restore-keys: |
           ${{ runner.os }}-go-
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.3.4
       with:
          fetch-depth: 0
     - name: Setup Go
       uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v2.2.0
       with:
         go-version: ${{ env.GO_VERSION }}
         check-latest: true
         cache: true
     - name: docker build
       run: make cron-controller-docker
  cron-worker:
    name: cron-worker-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v1
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@64c0c85d18e984422218383b81c52f8b077404d3 # v1.1.2
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Cache builds
       # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
       uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 #v3.3.1
       with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
         path: |
           ~/go/pkg/mod
           ~/.cache/go-build
           ~/Library/Caches/go-build
           %LocalAppData%\go-build
         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
         restore-keys: |
           ${{ runner.os }}-go-
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.3.4
       with:
          fetch-depth: 0
     - name: Setup Go
       uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v2.2.0
       with:
         go-version: ${{ env.GO_VERSION }}
         check-latest: true
         cache: true
     - name: docker build
       run: make cron-worker-docker
  cron-cii-worker:
    name: cron-cii--worker-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v1
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@64c0c85d18e984422218383b81c52f8b077404d3 # v1.1.2
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Cache builds
       # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
       uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 #v3.3.1
       with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
         path: |
           ~/go/pkg/mod
           ~/.cache/go-build
           ~/Library/Caches/go-build
           %LocalAppData%\go-build
         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
         restore-keys: |
           ${{ runner.os }}-go-
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.3.4
       with:
          fetch-depth: 0
     - name: Setup Go
       uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v2.2.0
       with:
         go-version: ${{ env.GO_VERSION }}
         check-latest: true
         cache: true
     - name: docker build
       run: make cron-cii-worker-docker
  cron-bq-transfer:
    name: cron-bq-transfer-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v1
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@64c0c85d18e984422218383b81c52f8b077404d3 # v1.1.2
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Cache builds
       # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
       uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 #v3.3.1
       with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
         path: |
           ~/go/pkg/mod
           ~/.cache/go-build
           ~/Library/Caches/go-build
           %LocalAppData%\go-build
         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
         restore-keys: |
           ${{ runner.os }}-go-
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.3.4
       with:
          fetch-depth: 0
     - name: Setup Go
       uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v2.2.0
       with:
         go-version: ${{ env.GO_VERSION }}
         check-latest: true
         cache: true
     - name: docker build
       run: make cron-bq-transfer-docker
  cron-webhook:
    name: cron-webhook-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v1
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@64c0c85d18e984422218383b81c52f8b077404d3 # v1.1.2
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Cache builds
       # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
       uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 #v3.3.1
       with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
         path: |
           ~/go/pkg/mod
           ~/.cache/go-build
           ~/Library/Caches/go-build
           %LocalAppData%\go-build
         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
         restore-keys: |
           ${{ runner.os }}-go-
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.3.4
       with:
          fetch-depth: 0
     - name: Setup Go
       uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v2.2.0
       with:
         go-version: ${{ env.GO_VERSION }}
         check-latest: true
         cache: true
     - name: docker build
       run: make cron-webhook-docker
  cron-github-server:
    name: cron-github-server-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@03bee3930647ebbf994244c21ddbc0d4933aab4f # v1
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@64c0c85d18e984422218383b81c52f8b077404d3 # v1.1.2
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Cache builds
       # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
       uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 #v3.3.1
       with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
         path: |
           ~/go/pkg/mod
           ~/.cache/go-build
           ~/Library/Caches/go-build
           %LocalAppData%\go-build
         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
         restore-keys: |
           ${{ runner.os }}-go-
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v2.3.4
       with:
          fetch-depth: 0
     - name: Setup Go
       uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v2.2.0
       with:
         go-version: ${{ env.GO_VERSION }}
         check-latest: true
         cache: true
     - name: docker build
       run: make cron-github-server-docker
