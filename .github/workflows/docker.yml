# Copyright 2021 OpenSSF Scorecard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

permissions:
  contents: read

name: docker-build

on:
 pull_request:
  branches:
  - main

env:
  PROTOC_VERSION: 3.17.3
  GO_VERSION_FILE: go.mod # no good way of getting a mutual version between go.mod and tools/go.mod
  CACHE_DEPENDENCY_PATH: "**/go.sum" # include both go.sum and tools/go.sum

jobs:
  docs_only_check:
    name: Check for docs-only change
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      docs_only: ${{ steps.docs_only_check.outputs.docs_only }}
    steps:
    - name: Check out code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2
      with:
        fetch-depth: 2 # needed to diff changed files
    - id: files
      name: Get changed files
      uses: tj-actions/changed-files@5978e5a2df95ef20cde627d4acb5edd1f87ba46a #v36.0.12
      with:
        files_ignore: '**.md'
    - id: docs_only_check
      if: steps.files.outputs.any_changed != 'true'
      name: Check for docs-only changes
      run: echo "docs_only=true" >> $GITHUB_OUTPUT

  scorecard:
    name: scorecard-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@149f6c87b92550901b26acd1632e11c3662e381f # v1.3.0
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
     - name: Setup Go
       uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
       with:
         go-version-file: ${{ env.GO_VERSION_FILE }}
         check-latest: true
         cache: true
         cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}
     - name: docker build
       run: make scorecard-docker
  cron-controller:
    name: cron-controller-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@149f6c87b92550901b26acd1632e11c3662e381f # v1.3.0
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
     - name: Setup Go
       uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
       with:
         go-version-file: ${{ env.GO_VERSION_FILE }}
         check-latest: true
         cache: true
         cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}
     - name: docker build
       run: make cron-controller-docker
  cron-worker:
    name: cron-worker-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@149f6c87b92550901b26acd1632e11c3662e381f # v1.3.0
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
     - name: Setup Go
       uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
       with:
         go-version-file: ${{ env.GO_VERSION_FILE }}
         check-latest: true
         cache: true
         cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}
     - name: docker build
       run: make cron-worker-docker
  cron-cii-worker:
    name: cron-cii--worker-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@149f6c87b92550901b26acd1632e11c3662e381f # v1.3.0
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
     - name: Setup Go
       uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
       with:
         go-version-file: ${{ env.GO_VERSION_FILE }}
         check-latest: true
         cache: true
         cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}
     - name: docker build
       run: make cron-cii-worker-docker
  cron-bq-transfer:
    name: cron-bq-transfer-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@149f6c87b92550901b26acd1632e11c3662e381f # v1.3.0
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
     - name: Setup Go
       uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
       with:
         go-version-file: ${{ env.GO_VERSION_FILE }}
         check-latest: true
         cache: true
         cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}
     - name: docker build
       run: make cron-bq-transfer-docker
  cron-webhook:
    name: cron-webhook-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@149f6c87b92550901b26acd1632e11c3662e381f # v1.3.0
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
     - name: Setup Go
       uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
       with:
         go-version-file: ${{ env.GO_VERSION_FILE }}
         check-latest: true
         cache: true
         cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}
     - name: docker build
       run: make cron-webhook-docker
  cron-github-server:
    name: cron-github-server-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs:
      - docs_only_check
    if: (needs.docs_only_check.outputs.docs_only != 'true')
    steps:
     - name: Harden Runner
       uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
       with:
         egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

     - name: Install Protoc
       uses: arduino/setup-protoc@149f6c87b92550901b26acd1632e11c3662e381f # v1.3.0
       with:
        version: ${{ env.PROTOC_VERSION }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
     - name: Clone the code
       uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
     - name: Setup Go
       uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
       with:
         go-version-file: ${{ env.GO_VERSION_FILE }}
         check-latest: true
         cache: true
     - name: docker build
       run: make cron-github-server-docker
