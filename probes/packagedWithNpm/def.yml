# Copyright 2025 OpenSSF Scorecard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

id: packagedWithNpm
lifecycle: stable
short: Check if the project is published to npm registry
motivation: >
  Packaging a project and publishing it to npm demonstrates that the project maintainers
  care about distributing the project to users. It shows the project
  is mature and ready for consumption. Projects published to npm
  are easily discoverable and installable by users via the npm registry.
implementation: >
  The probe first checks for the presence of a package.json file in the repository root.
  If found, it parses the file to extract the package name. It then queries the npm
  registry to verify if the package is actually published and available for installation.
  The probe also extracts repository information from the npm registry to provide
  additional context.
outcome:
  - If the project has a package.json file with a valid name and the package exists on npm registry, the probe returns OutcomeTrue.
  - If no package.json file is found, the probe returns OutcomeFalse.
  - If package.json exists but the package is not published to npm, the probe returns OutcomeFalse.
  - If package.json exists but has invalid JSON or missing name, the probe returns OutcomeFalse.
remediation:
  onOutcome: False
  effort: Medium
  text:
    - Create a package.json file in your repository root with appropriate metadata including a unique package name.
    - Publish your package to npm registry using 'npm publish' command.
    - Ensure your package name is not already taken on npm registry.
  markdown:
    - Create a `package.json` file in your repository root with appropriate metadata including a unique package name.
    - Publish your package to npm registry using `npm publish` command.
    - Ensure your package name is not already taken on npm registry.
ecosystem:
  languages:
    - javascript
    - typescript
  clients:
    - github
    - gitlab
    - localdir