# Copyright 2021 OpenSSF Scorecard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: scorecard-batch-worker
spec:
  replicas: 12
  selector:
    matchLabels:
      app.kubernetes.io/name: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: worker
    spec:
      containers:
        - name: worker
          image: gcr.io/openssf/scorecard-batch-worker:stable
          args: ["--ignoreRuntimeErrors=true", "--config=/etc/scorecard/config.yaml"]
          imagePullPolicy: Always
          env:
            - name: GITHUB_APP_KEY_PATH
              value: /etc/github/app_key
            - name: GITHUB_APP_ID
              valueFrom:
                secretKeyRef:
                  name: github
                  key: app_id
            - name: GITHUB_APP_INSTALLATION_ID
              valueFrom:
                secretKeyRef:
                  name: github
                  key: installation_id
            - name: GITLAB_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gitlab
                  key: auth_token
          volumeMounts:
            - name: config-volume
              mountPath: /etc/scorecard
              readOnly: true
            - name: github-app-key
              mountPath: "/etc/github/"
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: scorecard-config
        - name: github-app-key
          secret:
            secretName: github
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
