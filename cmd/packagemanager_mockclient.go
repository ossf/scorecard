// Copyright 2021 Security Scorecard Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/packagemanager_client.go

// Package cmd is a generated GoMock package.
package cmd

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockpackageManagerClient is a mock of packageManagerClient interface.
type MockpackageManagerClient struct {
	ctrl     *gomock.Controller
	recorder *MockpackageManagerClientMockRecorder
}

// MockpackageManagerClientMockRecorder is the mock recorder for MockpackageManagerClient.
type MockpackageManagerClientMockRecorder struct {
	mock *MockpackageManagerClient
}

// NewMockpackageManagerClient creates a new mock instance.
func NewMockpackageManagerClient(ctrl *gomock.Controller) *MockpackageManagerClient {
	mock := &MockpackageManagerClient{ctrl: ctrl}
	mock.recorder = &MockpackageManagerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpackageManagerClient) EXPECT() *MockpackageManagerClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockpackageManagerClient) Get(URI, packagename string) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", URI, packagename)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockpackageManagerClientMockRecorder) Get(URI, packagename interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockpackageManagerClient)(nil).Get), URI, packagename)
}
